name: CI

on:
  pull_request:
  push:

jobs:

  # Unit tests
  test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
        if: runner.os == 'linux'
      - name: Build & run tests
        run: cargo test

  # Clippy check
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-lint-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust (System Toolchain)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source ~/.cargo/env
          rustup component add rustfmt clippy

      - name: Install alsa and udev
        run: sudo apt-get install --no-install-recommends -y libasound2-dev libudev-dev

      - name: Run Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Check Format
        run: cargo fmt --all -- --check

